node {
   def mvnHome
   stage('Git Clone') { // for display purposes
      // Get some code from a GitHub repository
        git 'https://github.com/swargam402/sparkwar.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M1'
   }
   stage('Build') {
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package"
   }
   stage('Archive War') {
      archive 'target/*.war'
   }
   stage('Build Docker Image') {
        sh "docker build . -t swargam402/sparkwar:$BUILD_NUMBER"
   }
   stage('Create latest Tag') {
        sh "docker tag swargam402/sparkwar:$BUILD_NUMBER swargam402/sparkwar:latest"
   }
   stage('Push Images to Docker Hub') {
        sh "docker login -u swargam402 -p $dockerhub && docker push swargam402/sparkwar:$BUILD_NUMBER && docker push swargam402/sparkwar:latest"
   }
   stage('Cleanup containers') {
        sh "docker stop sparkwar && docker rm sparkwar"
   }
   stage('Deploy the latest Image'){
       sh "docker run -d --name sparkwar -p 8084:8080 swargam402/sparkwar:latest"
   }
   stage('Cleanup Image') {
        sh "docker rmi swargam402/sparkwar:$BUILD_NUMBER"
   }
}
//node {
//  def remote = [:]
//  remote.name = '192.168.253.138'
//  remote.host = '192.168.253.138'
//  remote.user = 'root'
//  remote.password = 'root'
//  remote.allowAnyHosts = true
//  stage('Remote SSH') {
//   sshCommand remote: remote, command: "ls -lrt"
 //   sshCommand remote: remote, command: "docker ps"
 // }
//}
